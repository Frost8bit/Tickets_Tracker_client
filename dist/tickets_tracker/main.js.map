{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/comment-create/comment-create.component.ts","./src/app/comment-create/comment-create.component.html","./src/app/companies-list/companies-list.component.ts","./src/app/companies-list/companies-list.component.html","./src/app/company-create/company-create.component.ts","./src/app/company-create/company-create.component.html","./src/app/company-edit/company-edit.component.ts","./src/app/company-edit/company-edit.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/my-tickets-admin/my-tickets-admin.component.ts","./src/app/my-tickets-admin/my-tickets-admin.component.html","./src/app/reply-create-user/reply-create-user.component.ts","./src/app/reply-create-user/reply-create-user.component.html","./src/app/reply-create/reply-create.component.ts","./src/app/reply-create/reply-create.component.html","./src/app/shared/_helpers/auth.guard.ts","./src/app/shared/_helpers/error.interceptor.ts","./src/app/shared/_helpers/index.ts","./src/app/shared/_helpers/jwt.interceptor.ts","./src/app/shared/_models/index.ts","./src/app/shared/_models/role.ts","./src/app/shared/_models/user.ts","./src/app/shared/_services/authentification.service.ts","./src/app/shared/_services/index.ts","./src/app/shared/_services/user.service.ts","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/shared/rest-api.service.ts","./src/app/ticket-create-user/ticket-create-user.component.ts","./src/app/ticket-create-user/ticket-create-user.component.html","./src/app/ticket-create/ticket-create.component.ts","./src/app/ticket-create/ticket-create.component.html","./src/app/ticket-edit/ticket-edit.component.ts","./src/app/ticket-edit/ticket-edit.component.html","./src/app/ticket-user/ticket-user.component.ts","./src/app/ticket-user/ticket-user.component.html","./src/app/ticket/ticket.component.ts","./src/app/ticket/ticket.component.html","./src/app/tickets_list-admin/tickets_list-admin.component.ts","./src/app/tickets_list-admin/tickets_list-admin.component.html","./src/app/tickets_list-user/tickets_list-user.component.ts","./src/app/tickets_list-user/tickets_list-user.component.html","./src/app/user-create/user-create.component.ts","./src/app/user-create/user-create.component.html","./src/app/user-edit/user-edit.component.ts","./src/app/user-edit/user-edit.component.html","./src/app/users-list-admin/users-list-admin.component.ts","./src/app/users-list-admin/users-list-admin.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../shared/_models';\nimport { UserService } from '../shared/_services';\n\n@Component({ templateUrl: 'admin.component.html' })\nexport class AdminComponent implements OnInit {\n    loading = false;\n    users: User[] = [];\n\n    constructor(private userService: UserService) { }\n\n    ngOnInit() {\n        this.loading = true;\n        this.userService.getAll().pipe(first()).subscribe(users => {\n            this.loading = false;\n            this.users = users;\n        });\n    }\n}","<div class=\"card mt-4\">\n    <h4 class=\"card-header\">Admin</h4>\n    <div class=\"card-body\">\n        <p>This page can be accessed <u>only by administrators</u>.</p>\n        <p class=\"mb-1\">All users from secure (admin only) api end point:</p>\n        <div *ngIf=\"loading\" class=\"spinner-border spinner-border-sm\"></div>\n        <ul *ngIf=\"users\">\n            <li *ngFor=\"let user of users\">{{user.name}} {{user.email}}</li>\n        </ul>\n    </div>\n</div>","import { NgModule, COMPILER_OPTIONS } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TicketsListAdminComponent } from './tickets_list-admin/tickets_list-admin.component';\nimport { TicketCreateComponent } from './ticket-create/ticket-create.component';\nimport { TicketComponent } from './ticket/ticket.component';\nimport { UsersListAdminComponent } from './users-list-admin/users-list-admin.component';\nimport { CommonModule } from '@angular/common';\nimport { TicketEditComponent } from './ticket-edit/ticket-edit.component';\nimport { CompaniesListComponent } from './companies-list/companies-list.component';\nimport {CompanyEditComponent} from './company-edit/company-edit.component';\nimport {CompanyCreateComponent} from './company-create/company-create.component';\nimport {UserCreateComponent} from './user-create/user-create.component';\nimport {UserEditComponent} from './user-edit/user-edit.component';\nimport {CommentCreateComponent} from './comment-create/comment-create.component';\nimport {ReplyCreateComponent} from './reply-create/reply-create.component';\nimport {MyTicketsAdminComponent} from './my-tickets-admin/my-tickets-admin.component';\nimport { TicketsListUserComponent } from './tickets_list-user/tickets_list-user.component'\nimport { TicketUserComponent } from './ticket-user/ticket-user.component'\nimport { TicketCreateUserComponent } from './ticket-create-user/ticket-create-user.component';\nimport { ReplyCreateUserComponent } from './reply-create-user/reply-create-user.component'\n\n\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './shared/_helpers';\nimport { Role } from './shared/_models';\n\n\nconst routes: Routes = [\n  \n  {\n    path: '',\n    component: HomeComponent,\n    canActivate: [AuthGuard],\n},\n{\n    path: 'admin',\n    component: AdminComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.Admin] }\n},\n{\n    path: 'login',\n    component: LoginComponent\n},\n{\n  path: 'tickets_list-admin',\n  component: TicketsListAdminComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [ Role.Admin ] }\n},\n{\n  path: 'tickets_list',\n  component: TicketsListUserComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [ Role.User ] }\n},\n{\n  path: 'ticket-create',\n  component: TicketCreateComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin ] }\n},\n{\n  path: 'new-ticket',\n  component: TicketCreateUserComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [ Role.User] }\n},\n{\n  path: 'ticket/:i_ticket',\n  component: TicketComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin] }\n},\n{\n  path: 'users',\n  component: UsersListAdminComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin] }\n},\n{\n  path: 'ticket-edit/:i_ticket',\n  component: TicketEditComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin] }\n},\n{\n  path: 'companies',\n  component: CompaniesListComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin] }\n},\n{\n  path: 'company-edit/:i_company',\n  component: CompanyEditComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin] }\n},\n{\n  path: 'company-create',\n  component: CompanyCreateComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin] }\n},\n{\n  path: 'user-create',\n  component: UserCreateComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin] }\n},\n{\n  path: 'user-edit/:i_user',\n  component: UserEditComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin] }\n},\n{\n  path: 'add-comment/:i_ticket',\n  component: CommentCreateComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin] }\n},\n{\n  path: 'add-reply/:i_ticket',\n  component: ReplyCreateComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin ] }\n},\n{\n  path: 'new-reply/:i_ticket',\n  component: ReplyCreateUserComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.User] }\n},\n{\n  path: 'my-tickets',\n  component: MyTicketsAdminComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [Role.Admin] }\n},\n{\n  path: 'my-ticket/:i_ticket',\n  component: TicketUserComponent,\n  canActivate: [AuthGuard],\n  data: { roles: [ Role.User] }\n},\n// otherwise redirect to home\n{ path: '**', redirectTo: '' },\n\n  { path :'', pathMatch: 'full', redirectTo: 'login' },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), CommonModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [ TicketsListAdminComponent, TicketComponent, CompaniesListComponent]","import { Component } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\n\nimport { AuthenticationService } from './shared/_services';\nimport { User, Role } from './shared/_models';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tickets-tracker';\n  user: User;\n\n  showHead: boolean = false;\n\n  ngOnInit() {\n  }\n\n  constructor(private authenticationService: AuthenticationService) {\n    this.authenticationService.user.subscribe(x => this.user = x);\n}\n\nget isAdmin() {\n    return this.user && this.user.role === Role.Admin;\n}\n\nget isUser() {\n  return this.user && this.user.role === Role.User;\n}\n\nget UserName() {\n  return this.user.name;\n}\n\nlogout() {\n    this.authenticationService.logout();\n}\n}\n\n","<div id=\"header\" class=\"container flexbox\">\r\n<!-- nav -->\r\n<nav class=\"navbar navbar-expand navbar-dark bg-dark toolbar\" *ngIf=\"user\">\r\n    <div class=\"navbar-nav d-flex \">\r\n            <ul class=\"topmenu navbar-nav\"> \r\n            <img class=\"toolbar img\"\r\n            width=\"40\"\r\n            alt=\"Logo\"\r\n            src=\"../../../assets/img/logo.png\"\r\n          />\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-item nav-link active down\" routerLink=\"/\"> Home <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item active\"> \r\n         <a class=\"nav-item nav-link active down\" routerLink=\"/tickets_list-admin\" *ngIf=\"isAdmin\"> All Tickets <span class=\"sr-only\">(current)</span></a>  \r\n        </li>\r\n        <li class=\"nav-item active\"> \r\n            <a class=\"nav-item nav-link active down\" routerLink=\"/my-tickets\" *ngIf=\"isAdmin\"> My Own Tickets <span class=\"sr-only\">(current) </span></a>\r\n        </li>\r\n        <li class=\"nav-item active\"> \r\n          <a class=\"nav-item nav-link active down\" routerLink=\"/tickets_list\" *ngIf=\"isUser\"> My Own Tickets <span class=\"sr-only\">(current) </span></a>\r\n      </li>\r\n        <li class=\"nav-item active\"> \r\n             <a class=\"nav-item nav-link active down\" routerLink=\"/companies\" *ngIf=\"isAdmin\"> Companies <span class=\"sr-only\">(current) </span></a>\r\n        </li>     \r\n        <li class=\"nav-item active\"> \r\n          <a class=\"nav-item nav-link active down\" routerLink=\"/users\" *ngIf=\"isAdmin\"> Users <span class=\"sr-only\">(current) </span></a>\r\n         </li>     \r\n        <li class=\"nav-item active\"> \r\n          <a class=\"nav-item nav-link active\"> Current user: {{user.name}} <img class=\"toolbar img\"\r\n            width=\"25\"\r\n            class\r\n            src=\"../../../assets/img/user.png\"/>  </a>\r\n            <ul class=\"submenu\">\r\n                    <a class=\"nav-item nav-link\"  style = \"color:blue\" (click)=\"logout()\" routerLink=\"/login\">Logout <span class=\"sr-only\">(current)</span></a>\r\n                  </ul>\r\n               </li>    \r\n            </ul> \r\n      </div>   \r\n</nav>\r\n</div>\r\n\r\n\r\n<!-- main app container -->\r\n<div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuillModule } from 'ngx-quill'\nimport { CommonModule } from '@angular/common';\n\n// HttpClient module for RESTful API\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// Forms module\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { JwtInterceptor, ErrorInterceptor } from './shared/_helpers';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './login/login.component';\n\n\n// Components\nimport { HeaderComponent } from './shared/header/header.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TicketsListAdminComponent } from './tickets_list-admin/tickets_list-admin.component';\nimport { TicketCreateComponent } from './ticket-create/ticket-create.component';\nimport { TicketComponent } from './ticket/ticket.component';\nimport { TicketEditComponent } from './ticket-edit/ticket-edit.component';\nimport { UsersListAdminComponent } from './users-list-admin/users-list-admin.component';\nimport { CompaniesListComponent } from './companies-list/companies-list.component';\nimport { CompanyCreateComponent } from './company-create/company-create.component';\nimport { CompanyEditComponent } from './company-edit/company-edit.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { CommentCreateComponent } from './comment-create/comment-create.component';\nimport { ReplyCreateComponent } from './reply-create/reply-create.component';\nimport { MyTicketsAdminComponent } from './my-tickets-admin/my-tickets-admin.component';\nimport { TicketsListUserComponent } from './tickets_list-user/tickets_list-user.component';\nimport { TicketUserComponent } from './ticket-user/ticket-user.component';\nimport { TicketCreateUserComponent } from './ticket-create-user/ticket-create-user.component';\nimport { ReplyCreateUserComponent } from './reply-create-user/reply-create-user.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    TicketsListAdminComponent,\n    TicketCreateComponent,\n    TicketComponent,\n    TicketEditComponent,\n    UsersListAdminComponent,\n    CompaniesListComponent,\n    CompanyCreateComponent,\n    CompanyEditComponent,\n    UserCreateComponent,\n    UserEditComponent,\n    CommentCreateComponent,\n    ReplyCreateComponent,\n    MyTicketsAdminComponent,\n    TicketsListUserComponent,\n    TicketUserComponent,\n    TicketCreateUserComponent,\n    ReplyCreateUserComponent,\n    HomeComponent,\n    AdminComponent,\n    LoginComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    QuillModule.forRoot(),\n  ],\n  schemas: [],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-comment-create',\n  templateUrl: './comment-create.component.html',\n  styleUrls: ['./comment-create.component.css']\n})\nexport class CommentCreateComponent implements OnInit {\n\n  i_ticket = this.actRoute.snapshot.params['i_ticket'];\n  user = JSON.parse(localStorage.getItem('user'));\n\n  @Input() commentDetails = { text: '', user: this.user.name, i_ticket: this.i_ticket}\n  public dataComment;\n  constructor(\n    public restApi: RestApiService, \n    public actRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  addComment(dataComment) {\n    this.restApi.createComment(this.commentDetails).subscribe((data: {}) => {\n      this.router.navigate(['/ticket/' + this.i_ticket ])\n    })\n  }\n}\n","<div class=\"list-container\">\n        <div class=\"col-md-12\">\n           <h2 class=\"mb-2 text-center\">Add comment</h2>\n          \n          <div id=\"quill\">\n            <quill-editor placeholder=\"Enter Text\"  [(ngModel)]=\"commentDetails.text\">\n            </quill-editor>\n        </div>\n\n          <div class=\"form-group\">\n           <button class=\"btn btn-secondary btn-block\" (click)=\"addComment(dataComment)\">Submit</button> \n          </div>\n      \n        </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\n\n@Component({\n  selector: 'app-companies-list',\n  templateUrl: './companies-list.component.html',\n  styleUrls: ['./companies-list.component.css']\n})\nexport class CompaniesListComponent implements OnInit {\n\n  Companies: any = [];\n\n\n  constructor(public restApi: RestApiService) { }\n\n  ngOnInit(): void {\n    this.loadCompanies();\n  }\n\n  loadCompanies(){\n    return this.restApi.getCompanies().subscribe((data: {}) => {\n      this.Companies = data;\n    })\n   }\n   \n  removeCompany(i_company){\n    if (window.confirm('You are going to remove this company. Are you sure?')){\n      this.restApi.deleteCompany(i_company).subscribe(data =>{\n        this.loadCompanies()\n      })\n    }\n  }\n}\n","<div class=\"container\">\n        <div class=\"margin-block\">\n               <h1 class=\"text-center font-weight-bold\"> Companies List </h1>\n\n               <div class=\"row justify-content-center \">\n                    <p class=\"btn btn-secondary \" routerLink=\"/company-create\">Create new company</p>\n                </div>\n    \n                <div class=\"row\">\n                <div class=\"col-3\"></div>  \n\n          <div class=\"col-6 \">\n                   <table id=\"CompaniesList\" class=\"table table-striped table-hover\">\n                       <thead>\n                            <tr> \n                               <th scope=\"col\" class=\"font-weight-bold\">Name</th>  \n                               <th scope=\"col\" class=\"font-weight-bold\">Info</th>\n                               <th scope=\"col\"> </th>\n                               <th scope=\"col\"> </th>\n                           </tr>\n                       </thead>\n                       <tbody>\n                        <tr *ngFor = \"let comp of Companies\">\n                            <td> {{comp.name}} </td>\n                            <td> {{comp.info}} </td> \n                            <td> \n                                <button type=\"button\" class=\"btn btn-info\" routerLink=\"/company-edit/{{comp.i_company}}\">Edit</button> \n                            </td>\n                            <td>\n                                  <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeCompany(comp.i_company)\"> Delete </button> \n                            </td>\n                        </tr>   \n                       </tbody>\n                   </table>\n                   <div class=\"col-3\"></div>  \n\n               </div>\n      \n      \n          </div> \n      </div>     \n      \n    ","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestApiService } from \"../shared/rest-api.service\";\n\n@Component({\n  selector: 'app-company-create',\n  templateUrl: './company-create.component.html',\n  styleUrls: ['./company-create.component.css']\n})\nexport class CompanyCreateComponent implements OnInit {\n  i_ticket = this.actRoute.snapshot.params['i_ticket'];\n\n \n  @Input() companyDetails = { name: '', info: ''}\n  public dataCompany;\n  constructor(\n    public restApi: RestApiService, \n    public actRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  addCompany(dataCompany) {\n    this.restApi.createCompany(this.companyDetails).subscribe((data: {}) => {\n      this.router.navigate(['/companies'])\n    })\n  }\n  ngOnInit(): void {\n  }\n}\n","<div class=\"list-container\">\n    <div class=\"col-md-12\">\n       <h2 class=\"mb-2 text-center\">Create new company</h2>\n  \n      <div class=\"form-group\">\n        <input type=\"text\" [(ngModel)]=\"companyDetails.name\" class=\"form-control\" placeholder=\"Name\">\n      </div>\n  \n      <div class=\"form-group\">\n        <input type=\"text\" [(ngModel)]=\"companyDetails.info\" class=\"form-control\" placeholder=\"Information\">\n      </div>\n  \n      <div class=\"form-group\">\n       <button class=\"btn btn-secondary btn-block\" (click)=\"addCompany(dataCompany)\">Submit</button> \n      </div>\n  \n    </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestApiService } from \"../shared/rest-api.service\";\n\n@Component({\n  selector: 'app-company-edit',\n  templateUrl: './company-edit.component.html',\n  styleUrls: ['./company-edit.component.css']\n})\n\nexport class CompanyEditComponent implements OnInit {\n\n  i_company = this.actRoute.snapshot.params['i_company'];\n  companyData: any = {};\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) { \n  }\n\n  ngOnInit() {\n    console.log(this.i_company, this.companyData)\n\n    this.restApi.getCompany(this.i_company).subscribe((data: {}) =>{\n      this.companyData = data;\n      })\n  }\n\n  updateCompanyInfo() {\n    if(window.confirm('Are you sure?')){\n      this.restApi.updateCompany(this.i_company, this.companyData).subscribe(data => {\n        this.router.navigate(['companies/'])\n      })\n    }\n  }\n\n}\n","<div class=\"list-container\">\n        <div class=\"col-md-12\">\n           <h2 class=\"mb-2 text-center\">Update company info</h2>\n      \n           <div class=\"form-group\">\n              <label> Name </label>\n            <input type=\"text\" [(ngModel)]=\"companyData.name\" class=\"form-control\" placeholder=\"Name\">\n            </div>\n    \n            <div class=\"form-group\">\n                 <label> Information </label>\n                  <input type=\"text\" [(ngModel)]=\"companyData.info\" class=\"form-control\" placeholder=\"Information\">\n            </div>\n\n            <div class=\"form-group\">\n                <button class=\"btn btn-secondary btn-block\" (click)=\"updateCompanyInfo()\">Submit changes</button> \n             </div>    \n      \n</div>","import { Component } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { User } from '../shared/interfaces';\r\nimport { UserService, AuthenticationService } from '../shared/_services';\r\n\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent {\r\n    loading = false;\r\n    user: User;\r\n    userFromApi: User;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.user = this.authenticationService.userValue;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loading = true;\r\n        this.userService.getById(this.user.i_user).pipe(first()).subscribe(i_user => {\r\n            this.loading = false;\r\n            this.userFromApi = i_user;\r\n        });\r\n    }\r\n}","<div class=\"card mt-4\">\r\n    <h4 class=\"card-header\">Home</h4>\r\n    <div class=\"card-body\">\r\n        <p class=\"mb-1 *ngIf=\"userFromApi>Welcome back <strong>{{userFromApi.name}}</strong> from <strong>{{user.company}}</strong></p>\r\n        <p>Your role is: <strong>{{user.role}}</strong>.</p>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../shared/_services';\n \n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n    bSub: Subscription = null\n\n\n    constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      private authenticationService: AuthenticationService,\n  ) { \n      // redirect to home if already logged in\n      if (this.authenticationService.userValue) { \n          this.router.navigate(['/']);\n      }\n  }\n\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(5)]]\n    });\n\n           // get return url from route parameters or default to '/'\n           this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n          }\n\n   // convenience getter for easy access to form fields\n   get f() { return this.loginForm.controls; }\n\n\n\n   onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.email.value, this.f.password.value)\n        .pipe(first())\n        .subscribe(\n            data => {\n                this.router.navigate([this.returnUrl]);\n            },\n            error => {\n                this.error = error;\n                this.loading = false;\n            });\n            \n}\n\n}\n","\n<div class=\"toolbar\" role=\"banner\">\n  <nav class=\" three navbar navbar-expand-lg navbar-dark bg-dark\">\n    <img\n      width=\"40\"\n      alt=\"Logo\"\n      src=\"../../../assets/img/logo.png\"\n    />\n      <ul class=\"topmenu navbar-nav\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link down\"  routerLink = \"/enterprise-list\">Tickets Tracker <span class=\"sr-only\">(current)</span></a>\n        </li>\n    </ul>\n \n  </nav>\n</div>\n\n\n  <div class=\"list-container\">\n    <div class=\"col-md-12\">\n       <h2 class=\"mb-2 text-center\">Log in to the system 🔐</h2>\n  \n       <div class=\"card-body\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"email\">email</label>\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">email is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Login\n            </button>\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n        </form>\n    </div>\n  \n    </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\n\n@Component({ \n  selector: 'app-my-tickets-admin',\n  templateUrl: './my-tickets-admin.component.html',\n  styleUrls: ['./my-tickets-admin.component.css']\n})\nexport class MyTicketsAdminComponent implements OnInit {\n\n  Tickets: any = [];\n  owner  = JSON.parse(localStorage.getItem('user'));\n\n  constructor(public restApi: RestApiService) { }\n\n  ngOnInit() {\n\n    this.loadTickets();\n    \n   }\n   \n   loadTickets(){\n    return this.restApi.getTicketByOwner(this.owner.name).subscribe((data: {}) => {\n      this.Tickets = data;\n    })\n   }\n}\n","<div class=\"container \">\n    <div class=\"row\">\n           <div class=\"container-fluid\">\n               <div class=\"col-sm-12 text-center\">\n                       <h1 class=\"text-center spacer\">- My Own Tickets -</h1>\n                    <p class=\"btn btn-secondary\" routerLink=\"/ticket-create\">Create new TT</p>\n               </div>\n           </div>\n            \n           <div class=\"col-1\"></div>\n\n           <div class=\"col-10\">\n               <input type=\"text\" id=\"inputTicket\" onkeyup=\"findTicket()\" placeholder=\"Quick Search\" title=\"Subject\">\n               <table id=\"TicketsList\" class=\"table table-striped\">\n                   <thead>\n                        <tr>\n                           <th scope=\"col\">Subject</th>\n                           <th scope=\"col\">Created by</th>\n                           <th scope=\"col\">Created at</th>\n                           <th scope=\"col\">Owner</th>\n                           <th scope=\"col\">Priority</th>\n                           <th scope=\"col\">Severity</th>\n                           <th scope=\"col\">Status</th>\n                           <th scope=\"col\"> </th>\n                       </tr>\n                   </thead>\n                   <tbody>\n                       <tr *ngFor = \"let ticket of Tickets\" >\n                        <td> {{ticket.subject}} </td>\n                        <td> {{ticket.creator}} </td>      \n                        <td> {{ticket.created_at}} </td> \n                        <td> {{ticket.owner}} </td>\n                        <td> {{ticket.priority}} </td>\n                        <td> {{ticket.severity}} </td>\n                        <td> {{ticket.status}} </td>\n                           <td> <a class=\"btnsp\">\n                           <button type=\"button\" class=\"btnlst btn btn-sm\" routerLink=\"/ticket/{{ticket.i_ticket}}\">📖</button>\n\n                           <button type=\"button\" class=\"btnlst btn btn-sm\" routerLink=\"/ticket-edit/{{ticket.i_ticket}}\">🖊️ </button>\n                           </a> </td>\n                       </tr>\n                       \n                       \n                   </tbody>\n               </table>\n           </div>\n           <div class=\"col-1\"></div>\n       </div>\n</div>\n\n   \n   ","import { Component, OnInit, Input } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reply-create-user',\n  templateUrl: './reply-create-user.component.html',\n  styleUrls: ['./reply-create-user.component.css']\n})\nexport class ReplyCreateUserComponent implements OnInit {\n\n  i_ticket = this.actRoute.snapshot.params['i_ticket'];\n  user = JSON.parse(localStorage.getItem('user'));\n\n  @Input() replyDetails = { text: '', user: this.user.name, i_ticket: this.i_ticket}\n  public dataReply;\n  constructor(\n    public restApi: RestApiService, \n    public actRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  addReply(dataReply) { \n    this.restApi.createReply(this.replyDetails).subscribe((data: {}) => {\n      this.router.navigate(['/my-ticket/' + this.i_ticket ])\n\n    })\n  }\n\n}\n","<div class=\"list-container\">\n        <div class=\"col-md-12\">\n           <h2 class=\"mb-2 text-center\">Add reply</h2>\n      \n          <div id=\"quill ql-editor ql-snow ql-container\">\n            <quill-editor placeholder=\"Enter Text\"  [(ngModel)]=\"replyDetails.text\">\n            </quill-editor>\n        </div>\n      \n          <div class=\"form-group\">\n           <button class=\"btn btn-secondary btn-block\" (click)=\"addReply(dataReply)\">Submit</button> \n          </div>\n      \n        </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reply-create',\n  templateUrl: './reply-create.component.html',\n  styleUrls: ['./reply-create.component.css']\n})\nexport class ReplyCreateComponent implements OnInit {\n\n  i_ticket = this.actRoute.snapshot.params['i_ticket'];\n  user = JSON.parse(localStorage.getItem('user'));\n\n  @Input() replyDetails = { text: '', user: this.user.name, i_ticket: this.i_ticket}\n  public dataReply;\n  constructor(\n    public restApi: RestApiService, \n    public actRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  addReply(dataReply) { \n    this.restApi.createReply(this.replyDetails).subscribe((data: {}) => {\n      this.router.navigate(['/ticket/' + this.i_ticket ])\n    })\n  }\n}\n","<div class=\"list-container\">\n        <div class=\"col-md-12\">\n           <h2 class=\"mb-2 text-center\">Add reply</h2>\n      \n          <div id=\"quill ql-editor ql-snow ql-container\">\n            <quill-editor placeholder=\"Enter Text\"  [(ngModel)]=\"replyDetails.text\">\n            </quill-editor>\n        </div>\n      \n          <div class=\"form-group\">\n           <button class=\"btn btn-secondary btn-block\" (click)=\"addReply(dataReply)\">Submit</button> \n          </div>\n      \n        </div>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.authenticationService.userValue;\n        if (user) {\n            // check if route is restricted by role\n            if (route.data.roles && route.data.roles.indexOf(user.role) === -1) {\n                // role not authorised so redirect to home page\n                this.router.navigate(['/']);\n                return false;\n            }\n\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].indexOf(err.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                this.authenticationService.logout();\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add auth header with jwt if user is logged in and request is to api url\n        const user = this.authenticationService.userValue;\n        const isLoggedIn = user && user.token;\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${user.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","export * from './role';\nexport * from './user';","export enum Role {\n    User = 'customer',\n    Admin = 'admin'\n}","import { Role } from \"./role\";\n\nexport class User {\n    i_user: number;\n    name: string;\n    email: string;\n    password: string;\n    company: string\n    role: Role;\n    token?: string;\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n        this.user = this.userSubject.asObservable();\r\n    }\r\n\r\n    public get userValue(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    login(email: string, password: string) {\r\n        return this.http.post<any>(`${environment.apiUrl}/api/login`, { email, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n                this.userSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('user');\r\n        this.userSubject.next(null);\r\n    \r\n    }\r\n}","export * from '../_services/authentification.service';\r\nexport * from './user.service';","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/api/user/all`);\r\n    }\r\n\r\n    getById(i_user: number) {\r\n        return this.http.get<User>(`${environment.apiUrl}/api/user/get_by_id/${i_user}`);\r\n    }\r\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'header-component',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\n\r\nexport class HeaderComponent implements OnInit {\r\n\r\n    currentUserId: string;\r\n    currentUserName: string;\r\n\r\n    constructor( \r\n    private router: Router,\r\n    ) {\r\n   //  this.currentUserId = this.auth.currentUser();\r\n    //  this.currentUserName = this.auth.CurrentUserName();\r\n      this.currentUserId=JSON.parse(localStorage.getItem('user'));\r\n   this.currentUserName = JSON.parse(localStorage.getItem('user'));\r\n\r\n     }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  logout() {\r\n    //this.auth.logout();\r\n    this.router.navigate(['/login']);\r\n    this.ngOnInit();\r\n}\r\n\r\n}\r\n","\r\n    <nav class=\"container toolbar navbar navbar-expand-lg navbar-dark bg-dark\" >\r\n      <img class=\"toolbar img\"\r\n        width=\"40\"\r\n        alt=\"Logo\"\r\n        src=\"../../../assets/img/logo.png\"\r\n      />\r\n        <ul class=\"topmenu navbar-nav\">\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link down\"  routerLink = \"/tickets_list-admin\">Tickets List<span class=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li class=\"nav-item active\">\r\n              <a class=\"nav-link down\"  routerLink = \"/my-tickets\">My Own Tickets<span class=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link down\"  routerLink = \"/companies\">Companies<span class=\"sr-only\">(current)</span></a>\r\n         </li>\r\n         <li class=\"nav-item active\">\r\n          <a class=\"nav-link down\"  routerLink = \"/users\">Users<span class=\"sr-only\">(current)</span></a>\r\n       </li>\r\n          <li class=\"nav-item active dropdown \">\r\n          <a class=\"nav-link dropdown-toggle fa\" >\r\n            Queues\r\n          </a>\r\n          <ul class=\"submenu\">\r\n           <li><a routerLink = \"/territory-codes\">Support</a></li>\r\n          </ul>\r\n        </li>\r\n  \r\n        <li class=\"nav-item dropdown active\">\r\n          <a class=\"nav-link dropdown-toggle fa\">\r\n            User: {{currentUserId}}\r\n          </a>\r\n          <ul class=\"submenu\">\r\n            <a class=\"nav-item nav-link\"  style = \"color:blue\" (click)=\"logout()\">Logout <span class=\"sr-only\">(current)</span></a>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n   \r\n      \r\n    </nav>\r\n  \r\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse  } from '@angular/common/http';\r\nimport { Enterprise, Document, territoryCodes, Permission, Dodatok, Tickets, Correspondence, User, Company } from '../shared/interfaces';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class RestApiService {\r\n  \r\n  // Define API\r\n  apiURL = 'http://localhost:333';\r\n\r\n  constructor(private http: HttpClient) {}\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }  \r\n\r\n  getTickets(): Observable<Tickets[]>{\r\n    return this.http.get<Tickets[]>(this.apiURL + '/api/tickets')\r\n  } \r\n\r\n  getTicket(i_ticket): Observable<Tickets> {\r\n    return this.http.get<Tickets>(this.apiURL + '/api/tickets/' + i_ticket)\r\n  }  \r\n\r\n  createTicket(ticket): Observable<Tickets> {\r\n    return this.http.post<Tickets>(this.apiURL + '/api/tickets', JSON.stringify(ticket), this.httpOptions)\r\n}\r\n\r\n  updateTicket(i_ticket, ticketData): Observable<Tickets> {\r\n    return this.http.put<Tickets>(this.apiURL + '/api/tickets/' + i_ticket, JSON.stringify(ticketData), this.httpOptions)\r\n  }\r\n\r\n  getTicketByOwner(name): Observable<Tickets> {\r\n    return this.http.get<Tickets>(this.apiURL + '/api/tickets/get_by_owner/' + name)\r\n  }  \r\n\r\n  getTicketByCreator(name): Observable<Tickets> {\r\n    return this.http.get<Tickets>(this.apiURL + '/api/tickets/get_by_creator/' + name)\r\n  }  \r\n\r\ngetCorrespondence(i_ticket): Observable<Correspondence[]>{\r\n  return this.http.get<Correspondence[]>(this.apiURL + '/api/correspondence/tt/' + i_ticket)\r\n} \r\n\r\ngetReplies(i_ticket): Observable<Correspondence[]>{\r\n  return this.http.get<Correspondence[]>(this.apiURL + '/api/replies/tt/' + i_ticket)\r\n} \r\n\r\ncreateComment(ticket): Observable<Correspondence> {\r\n  return this.http.post<Correspondence>(this.apiURL + '/api/comment', JSON.stringify(ticket), this.httpOptions)\r\n}\r\n\r\ncreateReply(ticket): Observable<Correspondence> {\r\n  return this.http.post<Correspondence>(this.apiURL + '/api/reply', JSON.stringify(ticket), this.httpOptions)\r\n}\r\n\r\ngetUsers(): Observable<User[]>{\r\n  return this.http.get<User[]>(this.apiURL + '/api/user/all')\r\n}\r\n\r\ngetUser(i_user): Observable<User> {\r\n  return this.http.get<User>(this.apiURL + '/api/user/get_by_id/' + i_user)\r\n}  \r\n\r\ngetAdmins(): Observable<User[]>{\r\n  return this.http.get<User[]>(this.apiURL + '/api/user/all/admins')\r\n}\r\n\r\ncreateUser(dataUser): Observable<User> {\r\n  return this.http.post<User>(this.apiURL + '/api/user', JSON.stringify(dataUser), this.httpOptions)\r\n}\r\n\r\ndeleteUser(i_user): Observable<User> {\r\n  return this.http.delete<User>(this.apiURL + '/api/user/' + i_user, this.httpOptions)\r\n}\r\n\r\nupdateUser(i_user, userData): Observable<User> {\r\n  return this.http.put<User>(this.apiURL + '/api/user/' + i_user, JSON.stringify(userData), this.httpOptions)\r\n}\r\n\r\ngetCustomers(): Observable<User[]> {\r\n  return this.http.get<User[]>(this.apiURL + '/api/user/all/customers')\r\n}\r\n\r\ngetCompanies(): Observable<Company[]> {\r\n  return this.http.get<Company[]>(this.apiURL + '/api/companies')\r\n}\r\n\r\ngetCompany(i_company): Observable<Company> {\r\n  return this.http.get<Company>(this.apiURL + '/api/company/' + i_company)\r\n}\r\n\r\ncreateCompany(company): Observable<Company> {\r\n  return this.http.post<Company>(this.apiURL + '/api/company', JSON.stringify(company), this.httpOptions)\r\n}\r\n\r\nupdateCompany(i_company, companyData): Observable<Company> {\r\n  return this.http.put<Company>(this.apiURL + '/api/company/' + i_company, JSON.stringify(companyData), this.httpOptions)\r\n}\r\n\r\ndeleteCompany(i_company): Observable<Company> {\r\n  return this.http.delete<Company>(this.apiURL + '/api/company/' + i_company, this.httpOptions)\r\n}\r\n\r\n    handleError(error) {\r\n     let errorMessage = '';\r\n     if(error.error instanceof ErrorEvent) {\r\n       // Get client-side error\r\n       errorMessage = error.error.message;\r\n     } else {\r\n       // Get server-side error\r\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n     }\r\n     window.alert(errorMessage);\r\n     return throwError(errorMessage);\r\n  }\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestApiService } from \"../shared/rest-api.service\";\n\n@Component({\n  selector: 'app-ticket-create-user',\n  templateUrl: './ticket-create-user.component.html',\n  styleUrls: ['./ticket-create-user.component.css']\n})\nexport class TicketCreateUserComponent implements OnInit {\n\n  user = JSON.parse(localStorage.getItem('user'));\n  \n  @Input() ticketDetails = { subject: '', request_content: '', creator: this.user.name }\n  public dataTicket;\n  constructor(\n    public restApi: RestApiService, \n    private router: Router,\n  ) { }\n\n  ngOnInit() { }\n\n  \n\n    addTicket(dataTicket) {\n      this.restApi.createTicket(this.ticketDetails).subscribe((data: {}) => {\n         this.router.navigate(['/tickets_list'])\n      })\n    }\n\n\n }\n","<div class=\"list-container\">\n    <div class=\"col-md-12\">\n       <h2 class=\"mb-2 text-center\">Create new ticket</h2>\n  \n      <div class=\"form-group\">\n        <input type=\"text\" [(ngModel)]=\"ticketDetails.subject\" class=\"form-control\" placeholder=\"Subject\">\n      </div>\n\n      <div id=\"quill\">\n        <quill-editor placeholder=\"Enter Text\"  [(ngModel)]=\"ticketDetails.request_content\">\n        </quill-editor>\n    </div>\n  \n      <div class=\"form-group\">\n       <button class=\"btn btn-secondary btn-block\" (click)=\"addTicket(dataTicket)\">Submit Ticket</button> \n      </div>\n\n  \n    </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestApiService } from \"../shared/rest-api.service\";\n\n@Component({\n  selector: 'app-ticket-create',\n  templateUrl: './ticket-create.component.html',\n  styleUrls: ['./ticket-create.component.css']\n})\nexport class TicketCreateComponent implements OnInit {\n\n  user = JSON.parse(localStorage.getItem('user'));\n  \n  @Input() ticketDetails = { subject: '', request_content: '', creator: this.user.name }\n  public dataTicket;\n  constructor(\n    public restApi: RestApiService, \n    private router: Router,\n  ) { }\n\n  ngOnInit() { }\n\n  \n\n    addTicket(dataTicket) {\n      this.restApi.createTicket(this.ticketDetails).subscribe((data: {}) => {\n        this.router.navigate(['/tickets_list-admin']) ||  this.router.navigate(['/tickets_list' ])\n      })\n    }\n\n\n }\n","<div class=\"list-container\">\n    <div class=\"col-md-12\">\n       <h2 class=\"mb-2 text-center\">Create new ticket</h2>\n  \n      <div class=\"form-group\">\n        <input type=\"text\" [(ngModel)]=\"ticketDetails.subject\" class=\"form-control\" placeholder=\"Subject\">\n      </div>\n\n      <div id=\"quill\">\n        <quill-editor placeholder=\"Enter Text\"  [(ngModel)]=\"ticketDetails.request_content\">\n        </quill-editor>\n    </div>\n  \n      <div class=\"form-group\">\n       <button class=\"btn btn-secondary btn-block\" (click)=\"addTicket(dataTicket)\">Submit Ticket</button> \n      </div>\n\n  \n    </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { User } from '../shared/interfaces';\n\n@Component({\n  selector: 'app-ticket-edit',\n  templateUrl: './ticket-edit.component.html',\n  styleUrls: ['./ticket-edit.component.css']\n})\nexport class TicketEditComponent implements OnInit {\n\n  i_ticket = this.actRoute.snapshot.params['i_ticket'];\n  ticketData: any = {};\n  priorities: string[] = [\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\"];\n  severities: string[] = [\"Uncertain\", \"Minor\", \"Medium\", \"Urgent\"];\n  statuses: string[] = [\"New\", \"Open\", \"Stalled\", \"Closed\", \"Waiting\"];\n  owners: any = {};\n  requestors: any = {};\n\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router,\n  ) { \n  }\n\nngOnInit() {\n  this.restApi.getTicket(this.i_ticket).subscribe((data: {}) =>{\n    this.ticketData = data;\n    })\n\n   this.restApi.getCustomers().subscribe((data: User[]) =>{\n     this.requestors = Object.values(data).map(data => data.name);\n   }) \n\n   this.restApi.getAdmins().subscribe((data: User[]) =>{\n    this.owners = Object.values(data).map(data => data.name);\n  }) \n\n  }\n\n  updateTicketInfo() {\n    if(window.confirm('Are you sure?')){\n      this.restApi.updateTicket(this.i_ticket, this.ticketData).subscribe(data => {\n        this.router.navigate(['ticket/' + this.i_ticket])\n      })\n    }\n  }\n}\n\n","<div class=\"list-container\">\n    <div class=\"col-md-12\">\n       <h2 class=\"mb-2 text-center\">Update ticket info</h2>\n  \n       <div class=\"form-group\">\n          <label> Subject </label>\n        <input type=\"text\" [(ngModel)]=\"ticketData.subject\" class=\"form-control\" placeholder=\"Subject\">\n         </div>\n\n         <div class=\"form-group\">\n          <label> Created by </label>\n          <select class=\"form-control\" name=\"requestor\" [(ngModel)] = 'ticketData.creator'>\n              <option *ngFor=\"let requestor of requestors\" [ngValue]=\"requestor\" >\n                  {{requestor}}\n              </option>\n            </select>  \n      </div>\n\n      <div class=\"form-group\">\n            <label> Owner </label>\n            <select class=\"form-control\" name=\"owner\" [(ngModel)] = 'ticketData.owner'>\n                <option *ngFor=\"let owner of owners\" [ngValue]=\"owner\" >\n                    {{owner}}\n                </option>\n              </select>  \n        </div>\n\n      <div class=\"form-group\">\n            <label> Priority </label>\n            <select class=\"form-control\" name=\"priority\" [(ngModel)] = 'ticketData.priority'>\n                \n                <option *ngFor=\"let priority of priorities\" [ngValue]=\"priority\" >\n                    {{priority}}\n                </option>\n              </select>  \n        </div>\n\n      <div class=\"form-group\">\n          <label> Severity </label>\n          <select class=\"form-control\" name=\"severity\" [(ngModel)] = 'ticketData.severity'>\n              \n              <option *ngFor=\"let severity of severities\" [ngValue]=\"severity\" >\n                  {{severity}}\n              </option>\n            </select>  \n      </div>\n\n      <div class=\"form-group\">\n            <label> Status </label>\n            <select class=\"form-control\" name=\"status\" [(ngModel)] = 'ticketData.status'>\n                \n                <option *ngFor=\"let status of statuses\" [ngValue]=\"status\" >\n                    {{status}}\n                </option>\n              </select>  \n        </div>\n  \n      <div class=\"form-group\">\n       <button class=\"btn btn-secondary btn-block\" (click)=\"updateTicketInfo()\">Submit changes</button> \n      </div>\n  \n    </div>","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ticket-user',\n  templateUrl: './ticket-user.component.html',\n  styleUrls: ['./ticket-user.component.css']\n})\nexport class TicketUserComponent implements OnInit {\n  i_ticket = this.actRoute.snapshot.params['i_ticket'];\n\n  Tickets: any = {};\n  RepliesData: any = [];\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  )  { }\n\n  ngOnInit() {\n  this.loadTicket()\n  this.loadReplies()\n }\n\n  loadTicket(){\n    this.restApi.getTicket(this.i_ticket).subscribe((data: {}) =>{\n      this.Tickets = data;\n    })\n  }\n\n  loadReplies(){\n    this.restApi.getReplies(this.i_ticket).subscribe((data: {}) =>{\n      this.RepliesData = data;\n    })\n  }\n\n }\n","<div class=\"container\">\r\n  <div class=\"margin-block-5\" >\r\n         <h1 class=\"text-center font-weight-bold\">Ticket #{{Tickets.i_ticket}}: {{Tickets.subject}}</h1>\r\n    \r\n             \r\n         <div class=\"container \">\r\n\r\n            <div class=\"row \">\r\n              <div class=\"col \">\r\n                <p class=\"font-weight-bold text-right\"> Created by:</p>\r\n              </div>\r\n              <div class=\"col text-success\">\r\n                  <p>{{Tickets.creator}}</p> \r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                 <p class=\"font-weight-bold text-right\">At :</p>\r\n              </div>\r\n              <div class=\"col text-primary\">\r\n                <p> {{Tickets.created_at}} </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                    <div class=\"col \">\r\n                          <p class=\"font-weight-bold text-right\">Priority:</p>\r\n                    </div>\r\n                    <div class=\"col text-danger\">\r\n                          <p> {{Tickets.priority}} </p>\r\n                    </div>\r\n                  </div>\r\n\r\n            <div class=\"row\">\r\n                    <div class=\"col\">\r\n                          <p class=\"font-weight-bold  text-right\">Severity:</p>\r\n                    </div>\r\n                    <div class=\"col text-primary\">\r\n                          <p> {{Tickets.severity}} </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col\">\r\n                          <p class=\"font-weight-bold  text-right\">Status:</p>\r\n                    </div>\r\n                    <div class=\"col text-primary\">\r\n                          <p> {{Tickets.status}} </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <h2 class=\"font-weight-bold , text-center\">Details:</h2>\r\n\r\n          \r\n              <div class=\"text-dark text-center\">\r\n                <p class=\"ql-editor ql-container\" [innerHTML]=Tickets.request_content>  </p>\r\n              </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"container\">\r\n    <div class=\"list-container-ticket row\">\r\n\r\n        <div class=\"col-md-12\">\r\n            <h2 class=\"font-weight-bold , text-center\">History:</h2>\r\n\r\n             <table id=\"CorrespondenceList\" class=\"table table-striped\">\r\n                 <thead>\r\n                      <tr>\r\n                         <th scope=\"col\"></th>  \r\n                         <th scope=\"col\"></th>\r\n                         <th scope=\"col\"></th>\r\n                         <th scope=\"col\"></th>\r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                  <tr *ngFor = \"let reply of RepliesData\">\r\n                      <td style=\"width: 150px\"> {{reply.time_at}} </td>\r\n                      <td> {{reply.type}} added </td> \r\n                      <td> by {{reply.user}} </td>         \r\n                      <td class=\"ql-editor ql-container ql-snow\" [innerHTML]=reply.text></td>                          \r\n                  </tr>   \r\n\r\n                 </tbody>\r\n             </table>\r\n         </div>\r\n\r\n\r\n    </div> \r\n</div>     \r\n\r\n\r\n\r\n<div class=\"container-fluid\" style=\"margin-top: 3%\">\r\n    <div class=\"col-12 text-center spacer\">\r\n         <p class=\"btn btn-warning mx-auto\" routerLink=\"/new-reply/{{i_ticket}}\">Add Reply</p>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.css']\n})\nexport class TicketComponent implements OnInit {\n  i_ticket = this.actRoute.snapshot.params['i_ticket'];\n\n  Tickets: any = {};\n  CorresponcenceData: any = [];\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  )  { }\n\n  ngOnInit() {\n  this.loadTicket()\n  this.loadCorrespondence()\n }\n\n  loadTicket(){\n    this.restApi.getTicket(this.i_ticket).subscribe((data: {}) =>{\n      this.Tickets = data;\n    })\n  }\n\n  loadCorrespondence(){\n    this.restApi.getCorrespondence(this.i_ticket).subscribe((data: {}) =>{\n      this.CorresponcenceData = data;\n    })\n  }\n\n }\n","<div class=\"container\">\r\n  <div class=\"margin-block-5\" >\r\n         <h1 class=\"text-center font-weight-bold\">Ticket #{{Tickets.i_ticket}}: {{Tickets.subject}}</h1>\r\n    \r\n             \r\n         <div class=\"container \">\r\n\r\n            <div class=\"row \">\r\n              <div class=\"col \">\r\n                <p class=\"font-weight-bold text-right\"> Created by:</p>\r\n              </div>\r\n              <div class=\"col text-success\">\r\n                  <p>{{Tickets.creator}}</p> \r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                 <p class=\"font-weight-bold text-right\">At :</p>\r\n              </div>\r\n              <div class=\"col text-primary\">\r\n                <p> {{Tickets.created_at}} </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                    <p class=\"font-weight-bold text-right\">TT owner: </p>\r\n              </div>\r\n              <div class=\"col text-warning\">\r\n                    <p> {{Tickets.owner}} </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                    <div class=\"col \">\r\n                          <p class=\"font-weight-bold text-right\">Priority:</p>\r\n                    </div>\r\n                    <div class=\"col text-danger\">\r\n                          <p> {{Tickets.priority}} </p>\r\n                    </div>\r\n                  </div>\r\n\r\n            <div class=\"row\">\r\n                    <div class=\"col\">\r\n                          <p class=\"font-weight-bold  text-right\">Severity:</p>\r\n                    </div>\r\n                    <div class=\"col text-primary\">\r\n                          <p> {{Tickets.severity}} </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col\">\r\n                          <p class=\"font-weight-bold  text-right\">Status:</p>\r\n                    </div>\r\n                    <div class=\"col text-primary\">\r\n                          <p> {{Tickets.status}} </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <h2 class=\"font-weight-bold , text-center\">Details:</h2>\r\n\r\n          \r\n              <div class=\"text-dark text-center\">\r\n                <p class=\"ql-editor ql-container\" [innerHTML]=Tickets.request_content>  </p>\r\n              </div>\r\n\r\n              <div class=\"container-fluid\" style=\"margin-top: 1%\">\r\n                <div class=\"col-lg-12 text-center\">\r\n                     <p class=\"btn btn-secondary\" routerLink=\"/ticket-edit/{{i_ticket}}\">Update TT data</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"container\">\r\n    <div class=\"list-container-ticket row\">\r\n\r\n        <div class=\"col-md-12\">\r\n            <h2 class=\"font-weight-bold , text-center\">History:</h2>\r\n\r\n             <table id=\"CorrespondenceList\" class=\"table table-striped\">\r\n                 <thead>\r\n                      <tr>\r\n                         <th scope=\"col\"></th>  \r\n                         <th scope=\"col\"></th>\r\n                         <th scope=\"col\"></th>\r\n                         <th scope=\"col\"></th>\r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                  <tr *ngFor = \"let message of CorresponcenceData\">\r\n                      <td style=\"width: 150px\"> {{message.time_at}} </td>\r\n                      <td> {{message.type}} added </td> \r\n                      <td> by {{message.user}} </td>         \r\n                      <td class=\"ql-editor ql-container ql-snow\" [innerHTML]=message.text></td>                          \r\n                  </tr>   \r\n\r\n                 </tbody>\r\n             </table>\r\n         </div>\r\n\r\n\r\n    </div> \r\n</div>     \r\n\r\n\r\n\r\n<div class=\"container-fluid\" style=\"margin-top: 3%\">\r\n    <div class=\"col-12 text-center spacer\">\r\n         <p class=\"btn btn-warning mx-auto\" routerLink=\"/add-reply/{{i_ticket}}\">Add Reply</p>\r\n         &nbsp; &nbsp;\r\n         <p class=\"btn btn-info mx-auto\" routerLink=\"/add-comment/{{i_ticket}}\">Add Comment</p>\r\n    </div>\r\n</div>","import { Component, OnInit} from '@angular/core';\r\nimport { RestApiService } from \"../shared/rest-api.service\";\r\n\r\n@Component({\r\n  selector: 'app-tickets_list-admin',\r\n  templateUrl: './tickets_list-admin.component.html',\r\n  styleUrls: ['./tickets_list-admin.component.css']\r\n})\r\nexport class TicketsListAdminComponent implements OnInit { \r\n\r\n  Tickets: any = [];\r\n\r\nconstructor(public restApi: RestApiService) { }\r\n\r\nngOnInit() {\r\n\r\n  this.loadTickets();\r\n  \r\n }\r\n \r\n loadTickets(){\r\n  return this.restApi.getTickets().subscribe((data: {}) => {\r\n    this.Tickets = data;\r\n  })\r\n }\r\n}","<div class=\"container \">\r\n     <div class=\"row\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"col-sm-12 text-center\">\r\n                        <h1 class=\"text-center spacer\">- Tickets List -</h1>\r\n                     <p class=\"btn btn-secondary\" routerLink=\"/ticket-create\">Create new TT</p>\r\n                </div>\r\n            </div>\r\n             \r\n            <div class=\"col-1\"></div>\r\n\r\n            <div class=\"col-10\">\r\n                <input type=\"text\" id=\"inputTicket\" onkeyup=\"findTicket()\" placeholder=\"Quick Search\" title=\"Subject\">\r\n                <table id=\"TicketsList\" class=\"table table-striped\">\r\n                    <thead>\r\n                         <tr>\r\n                            <th scope=\"col\">Subject</th>\r\n                            <th scope=\"col\">Created by</th>\r\n                            <th scope=\"col\">Created at</th>\r\n                            <th scope=\"col\">Owner</th>\r\n                            <th scope=\"col\">Priority</th>\r\n                            <th scope=\"col\">Severity</th>\r\n                            <th scope=\"col\">Status</th>\r\n                            <th scope=\"col\"> </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor = \"let ticket of Tickets\" >\r\n                         <td> {{ticket.subject}} </td>\r\n                         <td> {{ticket.creator}} </td>      \r\n                         <td> {{ticket.created_at}} </td> \r\n                         <td> {{ticket.owner}} </td>\r\n                         <td> {{ticket.priority}} </td>\r\n                         <td> {{ticket.severity}} </td>\r\n                         <td> {{ticket.status}} </td>\r\n                            <td> <a class=\"btnsp\">\r\n                            <button type=\"button\" class=\"btnlst btn btn-sm\" routerLink=\"/ticket/{{ticket.i_ticket}}\">📖</button>\r\n\r\n                            <button type=\"button\" class=\"btnlst btn btn-sm\" routerLink=\"/ticket-edit/{{ticket.i_ticket}}\">🖊️ </button>\r\n                            </a> </td>\r\n                        </tr>\r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col-1\"></div>\r\n        </div>\r\n </div>\r\n\r\n    \r\n    ","import { Component, OnInit} from '@angular/core';\r\nimport { RestApiService } from \"../shared/rest-api.service\";\r\n\r\n@Component({\r\n  selector: 'app-tickets_list-user',\r\n  templateUrl: './tickets_list-user.component.html',\r\n  styleUrls: ['./tickets_list-user.component.css']\r\n})\r\nexport class TicketsListUserComponent implements OnInit { \r\n\r\n  Tickets: any = [];\r\n  creator  = JSON.parse(localStorage.getItem('user'));\r\n\r\nconstructor(public restApi: RestApiService) { }\r\n\r\nngOnInit() {\r\n\r\n  this.loadTickets();\r\n  \r\n }\r\n \r\n loadTickets(){\r\n  return this.restApi.getTicketByCreator(this.creator.name).subscribe((data: {}) => {\r\n    this.Tickets = data;\r\n  })\r\n }\r\n}","<div class=\"container \">\r\n     <div class=\"row\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"col-sm-12 text-center\">\r\n                        <h1 class=\"text-center spacer\">- Tickets List -</h1>\r\n                     <p class=\"btn btn-secondary\" routerLink=\"/new-ticket\">Create new TT</p>\r\n                </div>\r\n            </div>\r\n             \r\n            <div class=\"col-1\"></div>\r\n\r\n            <div class=\"col-10\">\r\n                <input type=\"text\" id=\"inputTicket\" onkeyup=\"findTicket()\" placeholder=\"Quick Search\" title=\"Subject\">\r\n                <table id=\"TicketsList\" class=\"table table-striped\">\r\n                    <thead>\r\n                         <tr>\r\n                            <th scope=\"col\">Subject</th>\r\n                            <th scope=\"col\">Created at</th>\r\n                            <th scope=\"col\">Priority</th>\r\n                            <th scope=\"col\">Severity</th>\r\n                            <th scope=\"col\">Status</th>\r\n                            <th scope=\"col\"> </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor = \"let ticket of Tickets\" >\r\n                         <td> {{ticket.subject}} </td>\r\n                         <td> {{ticket.created_at}} </td> \r\n                         <td> {{ticket.priority}} </td>\r\n                         <td> {{ticket.severity}} </td>\r\n                         <td> {{ticket.status}} </td>\r\n                            <td> <a class=\"btnsp\">\r\n                            <button type=\"button\" class=\"btnlst btn btn-sm\" routerLink=\"/my-ticket/{{ticket.i_ticket}}\">📖</button>\r\n                            </a> </td>\r\n                        </tr>\r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"col-1\"></div>\r\n        </div>\r\n </div>\r\n\r\n    \r\n    ","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { Company } from '../shared/interfaces';\n\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.css']\n})\nexport class UserCreateComponent implements OnInit {\n\n  companies: any = {};\n  roles: string[] = [\"customer\", \"admin\"];\n\n\n  @Input() userDetails = { name: '', email: '', role: '', password: '', company: ''}\n  public dataUser;\n  constructor(\n    public restApi: RestApiService, \n    private router: Router,\n  ) { }\n\n  addUser(dataUser) {\n    this.restApi.createUser(this.userDetails).subscribe((data: {}) => {\n      this.router.navigate(['/users'])\n    })\n  }\n\n  ngOnInit() {\n    this.restApi.getCompanies().subscribe((data: Company[]) =>{\n      this.companies = Object.values(data).map(data => data.name);\n      })\n  }\n\n}\n","<div class=\"list-container margin-block-5 row\">\n        <div class=\"col-md-12\">\n           <h2 class=\"mb-2 text-center\">Create new user</h2>\n      \n          <div class=\"form-group\">\n              <label>Name</label>\n            <input type=\"text\" [(ngModel)]=\"userDetails.name\" class=\"form-control\" placeholder=\"\">\n          </div>\n      \n          <div class=\"form-group\">\n                <label>Email</label>\n            <input type=\"text\" [(ngModel)]=\"userDetails.email\" class=\"form-control\" placeholder=\"\">\n          </div>\n\n          <div class=\"form-group\">\n                <label>Password</label>\n                <input type=\"password\" [(ngModel)]=\"userDetails.password\" class=\"form-control\" placeholder=\"\">\n              </div>\n      \n          <div class=\"form-group\">\n                <label> Role </label>\n                <select class=\"form-control\" name=\"role\" [(ngModel)] = 'userDetails.role'>\n                    <option *ngFor=\"let role of roles\" [ngValue]=\"role\" >\n                        {{role}}\n                    </option>\n                  </select>  \n            </div>\n\n            <div class=\"form-group\">\n                    <label> Company </label>\n                    <select class=\"form-control\" name=\"company\" [(ngModel)] = 'userDetails.company'>\n                        <option *ngFor=\"let company of companies\" [ngValue]=\"company\" >\n                            {{company}}\n                        </option>\n                      </select>  \n                </div>\n\n          <div class=\"form-group\">\n           <button class=\"btn btn-secondary btn-block\" (click)=\"addUser(dataUser)\">Submit</button> \n          </div>\n      \n        </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { Company } from '../shared/interfaces';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n\n  roles: string[] = [\"customer\", \"admin\"];\n  companies: any = {};\n  userData: any = {};\n  i_user= this.actRoute.snapshot.params['i_user'];\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router,\n  ) { \n  }\n\n  ngOnInit() {\n    this.restApi.getUser(this.i_user).subscribe((data: {}) =>{\n      this.userData = data;\n      })\n\n      this.restApi.getCompanies().subscribe((data: Company[]) =>{\n        this.companies = Object.values(data).map(data => data.name);\n        })\n  }\n\n  updateUserInfo() {\n    if(window.confirm('Are you sure?')){\n      this.restApi.updateUser(this.i_user, this.userData).subscribe(data => {\n        this.router.navigate(['users/'])\n      })\n    }\n  }\n\n}\n","<div class=\"list-container\">\n        <div class=\"col-md-12\">\n           <h2 class=\"mb-2 text-center\">Update user info</h2>\n      \n           <div class=\"form-group\">\n              <label> Name </label>\n            <input type=\"text\" [(ngModel)]=\"userData.name\" class=\"form-control\" placeholder=\"\">\n             </div>\n    \n             <div class=\"form-group\">\n              <label> Email </label>\n              <input type=\"text\" [(ngModel)]=\"userData.email\" class=\"form-control\" placeholder=\"\">\n          </div>\n    \n            <div class=\"form-group\">\n                    <label> Role </label>\n                    <select class=\"form-control\" name=\"role\" [(ngModel)] = 'userData.role'>\n                        <option *ngFor=\"let role of roles\" [ngValue]=\"role\" >\n                            {{role}}\n                        </option>\n                      </select>  \n                </div>\n    \n                <div class=\"form-group\">\n                        <label> Company </label>\n                        <select class=\"form-control\" name=\"company\" [(ngModel)] = 'userData.company'>\n                            <option *ngFor=\"let company of companies\" [ngValue]=\"company\" >\n                                {{company}}\n                            </option>\n                          </select>  \n                    </div>\n    \n          <div class=\"form-group\">\n           <button class=\"btn btn-secondary btn-block\" (click)=\"updateUserInfo()\">Submit changes</button> \n          </div>\n      \n        </div>","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\n\n@Component({\n  selector: 'app-users-list-admin',\n  templateUrl: './users-list-admin.component.html',\n  styleUrls: ['./users-list-admin.component.css']\n})\nexport class UsersListAdminComponent implements OnInit {\n\n  Users: any = [];\n\n\n  constructor(public restApi: RestApiService) { }\n\n  ngOnInit(): void {\n    this.loadUsers();\n  }\n\n  loadUsers(){\n    return this.restApi.getUsers().subscribe((data: {}) => {\n      this.Users = data;\n    })\n   }\n\n   removeUser(i_user){\n    if (window.confirm('You are going to remove this user. Are you sure?')){\n      this.restApi.deleteUser(i_user).subscribe(data =>{\n        this.loadUsers()\n      })\n    }\n  }\n\n}\n","<div class=\"container\">\n        <div class=\"margin-block\">\n               <h1 class=\"text-center font-weight-bold\"> Users List </h1>\n   \n\n               <div class=\"row justify-content-center \">\n                    <p class=\"btn btn-secondary \" routerLink=\"/user-create\">Create new user</p>\n                </div>\n    \n                <div class=\"row\">\n                <div class=\"col-1\"></div>  \n          <div class=\"col-md-10\" >\n               <table id=\"CorrespondenceList\" class=\"table table-striped\">\n                   <thead>\n                        <tr>\n                           <th scope=\"col\" class=\"font-weight-bold\">Name</th>  \n                           <th scope=\"col\" class=\"font-weight-bold\">Email</th>\n                           <th scope=\"col\" class=\"font-weight-bold\">Role</th>\n                           <th scope=\"col\" class=\"font-weight-bold\">Company</th>\n                           <th scope=\"col\"> </th>\n                           <th scope=\"col\"> </th>\n                       </tr>\n                   </thead>\n                   <tbody>\n                    <tr *ngFor = \"let user of Users\">\n                        <td> {{user.name}} </td>\n                        <td> {{user.email}} </td> \n                        <td> {{user.role}} </td> \n                        <td> {{user.company}} </td>             \n                        <td> \n                                <button type=\"button\" class=\"btn btn-info\" routerLink=\"/user-edit/{{user.i_user}}\">Edit</button> \n                            </td>          \n                            <td>\n                                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeUser(user.i_user)\"> Delete </button> \n                              </td>           \n                    </tr>   \n                   </tbody>\n               </table>\n               <div class=\"col-1\"></div>  \n\n           </div>\n  \n\n</div>","export const environment = {\n  apiUrl: 'http://localhost:333'\n};","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}